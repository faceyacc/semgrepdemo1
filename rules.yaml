rules:
  - id: hardcoded-token
    pattern-either:
      - pattern: $W(..., aws_secret_access_key="=~/^[A-Za-z0-9/+=]+$/", ...)
      - pattern: $W(..., aws_access_key_id="=~/^AKI/", ...)
      - pattern: $W(..., aws_session_token="...", ...)
    message: ardcoded AWS access token detected. Use environment variables to
      access tokens (e.g., os.environ.get(...)) or use non version-controlled
      configuration files.
    languages: [python]
    severity: WARNING
 
  - id: useless-eqeq
    patterns:
      - pattern-not-inside: |
          def __eq__(...):
              ...
      - pattern-not-inside: |
          def __cmp__(...):
              ...
      - pattern-not-inside: assert(...)
      - pattern-not-inside: assert ..., ...
      - pattern-not-inside: assertTrue(...)
      - pattern-not-inside: assertFalse(...)
      - pattern-either:
          - pattern: $X == $X
          - pattern: $X != $X
      - pattern-not: 1 == 1
    message: "This expression is always True: `$X == $X` or `$X != $X`. If testing
      for floating point NaN, use `math.isnan($X)`, or `cmath.isnan($X)` if the
      number is complex."
    languages:
      - python
    severity: ERROR
    metadata:
      category: correctness
      technology:
        - python
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
 